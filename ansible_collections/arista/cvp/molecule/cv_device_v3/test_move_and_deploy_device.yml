---
- name: Test cv_device_v3
  hosts: CloudVision
  connection: local
  gather_facts: no
  vars:
    DEVICE_NAME: leaf1

    CONTAINER:
      Test_Leafs:
        parentContainerName: Tenant

    CVP_DEVICES_MOVE_DEVICE:
      - fqdn: "{{DEVICE_NAME}}"
        parentContainerName: "Test_Leafs"

    CVP_DEVICES_PARENT_CONTAINER_NONE:
      - fqdn: "{{DEVICE_NAME}}"
        parentContainerName: None

    CVP_DEVICES_DEPLOY:
      - fqdn: leaf1.atd.lab    # leaf1 must be in undefined container
        parentContainerName: "Test_Leafs"

  tasks:
    # Creating a container
    - name: Build Container On {{inventory_hostname}}
      arista.cvp.cv_container_v3:
        topology: '{{CONTAINER}}'

    - name: Collect devices facts from {{inventory_hostname}}
      arista.cvp.cv_facts_v3:
        facts:
          - devices
        regexp_filter: "{{DEVICE_NAME}}"
      register: CV_FACTS_V3_RESULT

    - name: Run CV_DEVICE_V3 To Move Device
      arista.cvp.cv_device_v3:
        devices: '{{CVP_DEVICES_MOVE_DEVICE}}'
        state: present
      register: MOVE_DEVICE_RUN

    - name: Check Move Device
      assert:
        that:
          - "MOVE_DEVICE_RUN.devices_moved.changed == true"
          - "MOVE_DEVICE_RUN.devices_moved.devices_moved_count == 1"
          - "MOVE_DEVICE_RUN.devices_moved.devices_moved_list == ['leaf1_to_Test_Leafs']"
          - "MOVE_DEVICE_RUN.devices_moved.success == true"
          - "MOVE_DEVICE_RUN.failed == false"

    - name: Run CV_DEVICE_V3 To Move Device With Parent Container None
      arista.cvp.cv_device_v3:
        devices: '{{CVP_DEVICES_PARENT_CONTAINER_NONE}}'
        state: present
      ignore_errors: yes
      register: MOVE_DEVICE_NONE

    - name: Negative Test Check Move Device With Parent Container None
      assert:
        that:
          - MOVE_DEVICE_NONE.msg == "The target container 'None' for the device 'leaf1' does not exist on CVP."
          - MOVE_DEVICE_NONE.changed == false
          - MOVE_DEVICE_NONE.failed == true

    - name: Run CV_DEVICE_V3 To Move Device With Parent Container Same
      arista.cvp.cv_device_v3:
        devices: '{{CVP_DEVICES_MOVE_DEVICE}}'
        state: present
      ignore_errors: yes
      register: MOVE_DEVICE

    - name: Negative Test Check Move Device With Same Parent Container
      assert:
        that:
          - MOVE_DEVICE.devices_moved.changed == false
          - MOVE_DEVICE.devices_moved.devices_moved_count == 0
          - MOVE_DEVICE.devices_moved.devices_moved_list == []
          - MOVE_DEVICE.devices_moved.success == false
          - MOVE_DEVICE.failed == false
          - MOVE_DEVICE.taskIds: []

    - name: Move Device Back TO Original Container
      vars:
        CVP_DEVICES_MOVE_BACK_DEVICE:
          - fqdn: "{{DEVICE_NAME}}"
            parentContainerName: "{{CV_FACTS_V3_RESULT.data.cvp_devices[0].parentContainerName}}"
      arista.cvp.cv_device_v3:
        devices: '{{CVP_DEVICES_MOVE_BACK_DEVICE}}'
        state: present

    #################################
    ##        DEPLOY DEVICE        ##
    #################################

    - name: "Deploy device on {{inventory_hostname}}"
      arista.cvp.cv_device_v3:
        devices: '{{CVP_DEVICES_DEPLOY}}'
        state: present
      register: CV_DEVICE_V3_RESULT

        - name: "Check deploy_device"
          assert:
            that:
              - CV_DEVICE_V3_RESULT.changed == true
              - CV_DEVICE_V3_RESULT.devices_deployed.changed == true
              - CV_DEVICE_V3_RESULT.devices_deployed.devices_deployed_count == 1
              - CV_DEVICE_V3_RESULT.devices_deployed.devices_deployed_list == ["leaf3_deployed"]
              - CV_DEVICE_V3_RESULT.devices_deployed.success == true
              - CV_DEVICE_V3_RESULT.devices_deployed.taskIds != []

    - name: Remove Container
      arista.cvp.cv_container_v3:
        topology: '{{CONTAINER}}'
        state: absent
